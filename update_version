#!/bin/bash
# Generate version string from git version and store it in $1
# if needed

if [ "$1" = "" ]; then
	echo "usage: $0 <version_file>"
	exit 1
fi

file="$1"
update_error() {
	echo "version-update-error" > "$file"
	exit 1
}

set -e
trap update_error ERR

[ -d .git ] || update_error

# Extract version string from git
set -- $(git log -1 --format="%ct %h" --abbrev=7)
secs="$(($1 % 86400))"
yday="$(date --utc --date="@$1" "+%y.%j")"
vstring="$(printf 'git-%s.%05d-%s' "$yday" "$secs" "$2")"
branch="$(git branch --remote --verbose --no-abbrev --contains 2>/dev/null |
	sed -rne 's|^[^/]+/([^ ]+) [a-f0-9]{40} .+$|\1|p' | head -n1)"
if [ "$branch" != "master" ]; then
	vstring="$vstring-$branch"
fi
if ! git diff --no-ext-diff --quiet || ! git diff --no-ext-diff --cached --quiet; then
	vstring="$vstring+dirty"
fi

# Generate header file
cat > "$file.tmp" <<-EOF
/* Automatically generated by update_version script */
#define GITVERSION "${vstring}"
EOF

# Avoid updating timestamp on version file if version wasn't changed
if ! cmp -s "$file.tmp" "$file"; then
	mv "$file.tmp" "$file"
else
	rm "$file.tmp"
fi
